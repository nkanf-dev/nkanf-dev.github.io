[{"id":"2af716ef7c4019b7b5301a64f9adaff6","title":"用 Zlibrary 帮助我们学习编程和更多东西","content":"Zlibrary 是什么?以下内容引用自 Zlibrary 官方网站\n中文为机翻\n\n\n\n\n\n\n\n\n\nThe goal of Z-Library\nZ-图书馆的目标\nThe goal of Z-Library is to provide free access to literature to as many people in need as possible. Books are the scientific and cultural heritage(遗产) of all humankind, and we strive(力求) to preserve(保存) this legacy(遗留) and use its power for the benefit of our society. For hundreds of millions of people, obtaining(获得) quality education will become impossible without convenient access to the knowledge and information contained in books. That is why the priority(优先) of the Z-Library is literature that represents(代表) high cultural, scientific, or educational(教育) value.\nZ-Library 的目标是为尽可能多的有需要的人提供免费获取文献的机会。书籍是全人类的科学和文化遗产，我们努力保存这一遗产，并利用它的力量造福我们的社会。对于数亿人来说，如果不能方便地获取书本中包含的知识和信息，就不可能获得优质教育。这就是为什么Z-图书馆的优先级是代表较高文化、科学或教育价值的文献。\nWhat do we do?\n我们做什么？\n\nWe collect, systematize, and popularize literature;我们收集、系统化和普及文献；\nWe provide free access to books;我们提供免费书籍；\nWe organize the preservation(保存) of knowledge contained in books;我们组织书籍中所含知识的保存；\nWe aim to increase access to education for people all over the world.我们的目标是增加全世界人民接受教育的机会。\n\nWhat we don’t do: \n我们不做什么：\n\nWe don’t promote piracy. The work of authors and publishers(出版商) should be paid for and valued;我们不提倡盗版。作者和出版商的作品应该得到报酬和重视；\nWe don’t engage(参与) in any political activity. We support copyright legislation(立法), but we don’t aim to change laws;我们不参与任何政治活动。我们支持版权立法，但我们的目的不是改变法律；\nWe don’t sell books. 我们不卖书。\n\n可以说，Zlibrary 是一个让我们每一个人都能免费获取知识的网络图书馆。这是一个伟大的事业。\n我在 Zlibrary 上得到了不少的书，涵盖了从人文到自然等各个领域的内容。截止写文章之时，Zlibrary 上共有 13,356,582 本书和 84,837,643 篇文献。\n我与 Zlibrary 的相识其实 Zlibrary 在中文互联网已经广为人知了，根据官方（指 Zlibrary 官方，下同）的统计，使用 Zlibrary 的学生群体中，来自中国的占比最大。如果在搜索引擎查找“免费下载电子书”相关内容，结果中大概率也会出现 Zlibrary 的身影。\n同样，我也是在搜索引擎里知道了 Zlibrary 。但是由于总所周知的原因，在中国大陆访问 Zlibrary 官网需要特殊的方法。虽然有不少镜像站的存在，但是因为其总是不时失效，所以想在 Zlibrary 下载我们需要的电子书还存在的一定的障碍。因此那时候我使用 Zlibrary 并不频繁。除了上面提到的原因之外，我没有发掘出 Zlibrary 的用处也是另一个主要的原因。\n我频繁使用 Zlibrary 是从我拥有 Kindle 开始的。当时头脑一热在海鲜市场花了一百多搞来一台 Kindle 499（就是 Kindle 7 也叫 KT2， 下文中用 KT2 代指）。虽然它的 dpi很低，没有背光，而且只有 2G 的存储空间，但是用来看书其实也足够了。更重要的原因的，它是被允许带进学校的（其实是睁一只眼闭一只眼），所以这个老旧的 Kindle 也给我枯燥的学校生活带来了不少的乐趣（现在越狱了，装了 python 解释器，乐趣更多 :D）。\n虽然 KT2 尚可访问 Amazon Store 来获取电子书，但是我除了在里面下载了一本免费的史记之外，就没有用过 Amazon Store 了。因为里面不少的书都不是免费的，我觉得花钱去买电子书不值得，同时我已经斥巨资买了这个设备，还要再去买书的话就 CAN’T AFFORD 了。所以我就想起了 Zlibrary 这个能免费下载电子书的好地方。之后就是频繁从 Zlibrary 下书。不夸张地说，我的 KT2 上面几乎所有的书都是来自 Zlibrary 。\n现在距离我买这台 KT2 应该已经过去一年多了，可以说 with Zlibrary，它已经物超所值。我一开始下载了英语词典（这个不是 Zlibrary 上面的，而是书伴 Bookfere 提供的资源），然后手上的纸质词典就吃灰，毕竟输入查询比翻页要快得多。而且这个词典也能在我看英文书籍的时候发挥作用，我只需要长按不会的单词，就能弹出词典上的解释。这也是我后面要讲的，我第一次尝试阅读英文书籍就是从那时候开始。\n当时还是学习 Advanced C# 的阶段，四处寻找学习资源，看到知乎上有人推荐 C# in a nutshell 这本书。于是我就去 pdd 搜了一下，结果发现售价一百多，果断关闭，然后打开 Zlibrary 。但是很遗憾，Zlibrary 上没有这本书的中文版，而且最新的中文版也才更新到 C# 8，而英文原著已经推出了 C# 10 的版本。借着可以查词的便利，我决定尝试一下阅读英文原著。\n刚开始的阻力非常大，基本上一页几乎都是高亮的单词，一句话看几遍才能明白意思。不过由于兴趣的驱使，我还是坚持看了几章，除了一百多个生词，更让我眼前一亮的是国外教程的质量。或许是出版物的缘由，里面的代码都是新且规范的，特别是对于新特性的运用和命名的规范性上做的很好。而且内容很详细，可以说这本书是能够面向 Beginner 的，其中不仅是基本的概念和运用，也指出了不少的坑，给出了不少 Best Practice。\n而国内的教程书我看过一本所谓的《C++从入门到精通》，先不论老掉牙的VC++6，里面的内容多是晦涩难懂，很少给例子，像是生怕读者读懂了一样。而且里面变量命名多是abcd，毫无规范可言。而且一看还是2020年出版的书。这里我正好有一本Modern C++ for Abosolute Beginners 其中光是开头的 Hello world 程序就讲了好几页，从include到std::cout，每一个语句都解释得非常详细，而且最后还指出了不要用 using namespace std; 的 Best Practice。就这一处已经可以甩《C++从入门到精通》几条街了。\n说回 Zlibrary 。自从我尝试过这一本英文书之后，可谓是打开了一个宝库。之后我如饥似渴地从 Zlibrary 找编程方面的英文原著并下载到我的 KT2 上。一方面是因为国内编程相关的书实在是太滞后了，现存的书基本上都是几年前的技术，而我想学习 C# 新特性的运用，根本就不能满足。而国外的编程相关的书的情况就大不相同，2023年的新书比比皆是，甚至 .NET 7 还处于预览版，就已经有了关于它的新书。而在 Zlibrary 上很容易就可以得到这些书。另一方面是撇开语言障碍，国外的编程相关教程书更加通俗易懂，一些概念的解释总会比较详细，这也是不少国内教程书做不到的。再者阅读英文书也对我的英语学习有帮助。\n直到现在，我阅读编程相关的英文著作在语言方面的障碍已经小了很多，甚至可以连读几页都不用查一个单词。这归功于一个机遇，更归功于 Zlibrary 的丰富资源。\n我的推荐下面我会推荐几本我认为不错的书\nC# 10 in a nutshell\nZlibrary Page\n\nPro ASP.NET Core 6\nZlibrary Page\n\nModern C++ for Abusolute Beginners\nZlibrary Page\n还没结束不只是编程，正如上文所说 Zlibrary 是一个无比巨大的资源宝库。我在 Zlibrary 上也得到了英语学习材料、散文小说、心理学相关书籍等各类知识。而这些都是免费的，可以自由获取。\n回想小时候曾为了读一本书而日思夜想着去书店，虽然最后为了省钱买了盗版书，但是里面的知识货真价实。我不是不想支持正版书，但是我不足以去支持正版书。在仅剩的钱都送给了卖教辅书的书店以后，能留下去支付自己兴趣的钱已经很少。（国外的这些教程书动辄都是上百元，我几乎不可能 AFFORD）而我又不能遏制自己的渴望，那么花尽可能少的钱获取尽可能多的知识就成了我的最优选择。现在我不用去各书店辗转，当然我也不会再去。Zlibrary 以及其他的 自由 书籍分享站点正是给了大多数人一个获取知识的平台。\n这里以 Zlibrary 使命中的一句话结尾：\nBooks are the scientific and cultural heritage(遗产) of all humankind, and we strive(力求) to preserve(保存) this legacy(遗留) and use its power for the benefit of our society.\n书籍是全人类的科学和文化遗产，我们努力保存这一遗产，并利用它的力量造福我们的社会。\n","slug":"zlibrary-1","date":"2023-06-23T11:56:00.000Z","categories_index":"网站","tags_index":"网站,Coding,学习,Zlibrary","author_index":"KangKang"},{"id":"5be13362655080c17710a0b0464ab43b","title":"【教程】从零开始一步步搭建我的世界基岩版服务器 (Linux) 3~4","content":"【教程】从零开始一步步搭建我的世界基岩版服务器 (Linux) 3~4在上一节我们按需要调整了 server.properties 的相关设置。但是还有一些问题没有说到，这里补充一下。\n3. 其他的设置3.1 设置OP我们可以在终端里面输入\nop 玩家名称\n\n来给予玩家 OP权限\n3.2 设置白名单如果在上一节我们开启了白名单，那么我们可以在终端里输入\nallowlist add 玩家名称\n\n来添加白名单，如果想移除某人的白名单，可以在终端里输入\nallowlist remove 玩家名称\n\n3.3 显示坐标 &amp;&amp; 死亡不掉落 &amp;&amp; 生物破坏3.3.1 显示坐标输入下面的指令即可开启显示坐标\n/gamerule showCoordinates true\n\n3.3.2 死亡不掉落输入下面的指令即可开启死亡不掉落\n/gamerule keepInventory true\n\n3.3.3 生物破坏输入下面的指令即可开启生物破坏\n/gamerule mobGriefing true\n\n注意：关闭生物破坏可以防止苦力怕破坏地形，但是也会导致村民无法拾取食物进行繁殖和进行破坏地形的工作例如种地，所以需要灵活考虑，或者使用命令方块来进行苦力怕防爆\n4. 地图设置如果想要把自己的地图或者下载的地图在服务器里玩，那么我们就需要在服务器里进行一些设置。\n4.1 上传地图如果我们想使用自己的地图，那么我们第一步是把地图导出。\n\n导出的地图后缀名为.mcworld，它可以被当作zip压缩包。BDS并不能一键导入mcworld，所以让我们先把他的后缀名改为.zip。\n这时候我们就遇到了一个问题：怎么把文件上传到服务器呢？\n我们可能会想到ftp协议，搭建一个ftp服务如何？可行，但是太麻烦了。\n我们的ssh通常都会附带一个sftp，用它就能管理服务器的文件。\n因为面板和大部分ssh图形化客户端都附带了sftp管理文件的功能，所以这里着重讨论纯命令行的sftp如何操作。\n跟ssh类似，在Windows10及以上都自带了sftp的命令。让我们先打开Windows终端。\n然后输入\nsftp\n\n会输出\nusage: sftp [-46AaCfNpqrv] [-B buffer_size] [-b batchfile] [-c cipher]\n          [-D sftp_server_path] [-F ssh_config] [-i identity_file]\n          [-J destination] [-l limit] [-o ssh_option] [-P port]\n          [-R num_requests] [-S program] [-s subsystem | sftp_server]\n          destination\n\n懒了，语法不解释了，网上有很多教程\n就是先把地图的zip文件上传到worlds目录里面\n然后cd到worlds目录，再用unzip解压。假设我们上传的地图叫做test.zip\n然后我们世界的名字也叫test\nmkdir test &amp;&amp; unzip test.zip test/\n\n这样就成功解压了我们的世界，然后可以回到上一级目录把压缩包删掉\ncd ..\nrm test.zip\n\n之后再去server.properties修改我们要开的世界名称为test\nlevel-name=test\n\n现在我们再开启服务器就能玩到我们上传的世界了\n4.2 开启实验性这个我在之前的文章有讲，这里不再赘述\n「教程」如何在BDS开启实验性内容（不用下载存档） | KangLives Blog\n5. 资源包和行为包原版生存有点单调乏味？\n不如搞点Addons玩玩！\n假如我们现在从网上下载了一个后缀名为 .mcpack 的资源包或者行为包\n和地图一样，第一步修改后缀名为 .zip ，然后上传到服务器的地图的 behavior_packs(行为包) 或者 resource_packs(资源包) 目录内，然后使用unzip解压\n假如我们有一个 test.mcpack 的行为包\n首先改名为 test.zip\n然后上传到我们名为 test 的地图的 behavior_packs 目录内\nworlds&#x2F;test&#x2F;behavior_packs&#x2F;test.zip\n之后新建一个目录并解压到里面，我们这里新建 test行为包 目录\nmkdir test行为包\n\n使用unzip解压\nunzip test.zip test行为包/\n\n这还没完，我们必须在世界的 world_behavior_packs.json 里面把我们添加的行为包写上去\nworld_behavior_packs.json:\n\n[\n\t&#123;\n\t\t\"pack_id\" : \"5b4692ad-38aa-4c0d-87da-43fd3de5ca8f\",\n\t\t\"version\" : [ 1, 0, 0 ]\n\t&#125;\n]\n\n如果没有这个文件的话，可以自己创建一个。\npack_id 和 version 都可以在行为包内 manifest.json 文件里找到\nmanifest.json:\n&#123;\n    \"format_version\": 2,\n    \"header\": &#123;\n        \"description\": \"description\",\n        \"name\": \"test\",\n        \"uuid\": \"5b4692ad-38aa-4c0d-87da-43fd3de5ca8f\",\n        \"version\": [ 1, 0, 0 ],\n        \"min_engine_version\": [ 1, 14, 0 ]\n    &#125;,\n    \"modules\": [\n        &#123;\n            \"description\": \"description\",\n            \"type\": \"resources\",\n            \"uuid\": \"9f47a40b-2627-45fa-bb9f-52fd112716d4\",\n            \"version\": [1, 0, 0]\n        &#125;\n    ]\n&#125;\n\n\n\n\n\n\n\n\n\n\n\n“uuid”: “5b4692ad-38aa-4c0d-87da-43fd3de5ca8f”, “version”: [ 1, 0, 0 ],\nuuid 对应 pack_id\n注意：如果有多个行为包，记得在每个条目结尾的花括号后面加上逗号，这个逗号不能漏了，如果漏了逗号再开服，会导致地图里面所有Addon物品和生物都消失\n例如：\n[\n\t&#123;\n\t\t\"pack_id\" : \"5b4692ad-38aa-4c0d-87da-43fd3de5ca8f\",\n\t\t\"version\" : [ 1, 0, 0 ]\n\t&#125;,\n    &#123;\n\t\t\"pack_id\" : \"fd3c0dad-38aa-4c0d-87da-43fdd3d5c7da\",\n\t\t\"version\" : [ 1, 0, 1 ]\n\t&#125;\n]\n\n\n\n\n\n\n\n\n\n\n“version” : [ 1, 0, 0 ] }, &lt;— { “pack_id” : “fd3c0dad-\n资源包同理，只不过是把 behavior 换成了 resource\n","slug":"bds-tutorial-3-4","date":"2023-01-30T04:42:14.000Z","categories_index":"教程","tags_index":"Minecraft Bedrock Edition,我的世界基岩版,Linux,云服务器,BDS","author_index":"KangKang"},{"id":"c2f8dea90a1ebba807daf1c5e307a0a7","title":"【学习】从冲量到动量定理 1","content":"【学习】从冲量到动量定理 1开始记笔记了，物理是我的一大弱项。但是我会尽力学好它，利用这有限的资源。\n让我们先从教科书上面的知识开始吧\n1. 动量\n\n\n\n\n\n\n\n\n实验: 两辆小车都放在滑轨上，用一辆运动的小车碰撞一辆静止的小车，碰撞后两辆小车粘在一起运动。小车的速度用滑轨上的数字计时器测量。下表中的数据是某次实验时采集的。其中， 是运动小车的质量，是静止小车的质量 ； 是运动小车碰撞前的速度，是碰撞后两辆小车的共同速度\n\n\n\n\n\n\n\n\n\n\n\n\n次数\n\n\n\n\n\n\n\n1\n0.519\n0.519\n0.628\n0.307\n\n\n2\n0.519\n0.718\n0.656\n0.265\n\n\n3\n0.718\n0.519\n0.572\n0.321\n\n\n对上表分析：\n\n第一次两车质量相同，碰撞前后速度改变了 \n碰撞前运动小车的动能为 \n碰撞后小车的总动能为 \n\n\n第一次两车质量相同，碰撞前后速度改变了 \n碰撞前运动小车的动能为 \n碰撞后小车的总动能为 \n\n\n第一次两车质量相同，碰撞前后速度改变了 \n碰撞前运动小车的动能为 \n碰撞后小车的总动能为 \n\n\n\n对于速度的变化量，碰撞前后总动能和总动能的变化量来说，似乎毫无规律。\n继续看教材上面怎么说：\n\n\n\n\n\n\n\n\n\n上面的实验提示我们，对于发生碰撞的两个物体来说，它们的  之和在碰撞前后可能是不变的。这使我们意识到， 这个物理量具有特别的意义。物理学中把质量和速度的乘积  定义为物体的动量（momentum），用字母表示＝动量的单位是由质量的单位与速度的单位构成的，是千克米每秒，符号是  。动量是矢量，动量的方向与速度的方向相同\n它引出了一个新的物理量——动量  。并且找到了它在碰撞实验中的规律。\n这是怎么想出来的？\n我的想法是：并不是碰撞实验提出了动量，教材只是用这个实验展现动量的性质从而引入动量。\n\n\n\n\n\n\n\n\n\n物理学家始终在寻求自然界万物运动的规律，其中包括在多变的世界里找出某些不变量\n下面教材给出了一道例题:\n\n直接套公式算就可以了，注意矢量的方向。\n默认初速度的方向为正方向\n\n\n\n矢量的正负表示方向，所以答案为：\n动量变化量大小为 ，方向水平向左。\n\n\n\n\n\n\n\n\n\n如果物体沿直线运动，即动量始终保持在同一条直线上，在选定坐标轴的方向之后，动量的运算就可以简化成代数运算\n下面做一下教材后面的练习。\n","slug":"study-momentum-1","date":"2023-01-27T07:11:14.000Z","categories_index":"学习","tags_index":"物理,动量","author_index":"KangKang"},{"id":"6fb3b02a3f01d7ed8cc7d8b29e97553c","title":"「教程」从零开始一步步搭建我的世界基岩版服务器 (Linux) 2","content":"[教程]从零开始一步步搭建我的世界基岩版服务器 (Linux) 22. 进入服务器并调整 server.properties 设置2.1 进入服务器上一小节我们成功开启了BDS，并且让它在我们断开ssh之后依然保持运行。那么这一节就让我们进入自己的服务器看看还有什么事情需要做吧。\n在你尝试使用ssh连接服务器的时候就已经得到了服务器的IP地址，接下来让我们打开Minecraft基岩版，并通过服务器IP地址加入服务器。首先打开Minecraft基岩版，找到添加服务器，然后在里面输入我们服务器的IP地址，端口保持默认的19132，名称可以随便填。例如：\n名称: 我的服务器\n服务器地址: 1.2.3.4\n端口: 19132\n\n注意：如果无法连接到世界，请检查服务器的防火墙设置，不同的云服务器平台有不同的设置入口，可以去网上查找对应的教程。确保打开了UDP协议的19132端口。\n如果我们成功进入了服务器，那么恭喜你完成了这一小节。\n2.2 调整 server.properties 设置完成上一小节之后，就已经可以说我们搭建了一个 无OP原版纯净生存服务器 了。如果你想让自己的服务器更加个性化，可以进行下面的一些配置。\n1.19.41 版本 BDS 内默认的 server.properties 内容如下：\nserver-name=Dedicated Server\n# Used as the server name\n# Allowed values: Any string without semicolon symbol.\n\ngamemode=survival\n# Sets the game mode for new players.\n# Allowed values: \"survival\", \"creative\", or \"adventure\"\n\nforce-gamemode=false\n# force-gamemode=false (or force-gamemode  is not defined in the server.properties)\n# prevents the server from sending to the client gamemode values other\n# than the gamemode value saved by the server during world creation\n# even if those values are set in server.properties after world creation.\n# \n# force-gamemode=true forces the server to send to the client gamemode values\n# other than the gamemode value saved by the server during world creation\n# if those values are set in server.properties after world creation.\n\ndifficulty=easy\n# Sets the difficulty of the world.\n# Allowed values: \"peaceful\", \"easy\", \"normal\", or \"hard\"\n\nallow-cheats=false\n# If true then cheats like commands can be used.\n# Allowed values: \"true\" or \"false\"\n\nmax-players=10\n# The maximum number of players that can play on the server.\n# Allowed values: Any positive integer\n\nonline-mode=true\n# If true then all connected players must be authenticated to Xbox Live.\n# Clients connecting to remote (non-LAN) servers will always require Xbox Live authentication regardless of this setting.\n# If the server accepts connections from the Internet, then it's highly recommended to enable online-mode.\n# Allowed values: \"true\" or \"false\"\n\nallow-list=false\n# If true then all connected players must be listed in the separate allowlist.json file.\n# Allowed values: \"true\" or \"false\"\n\nserver-port=19132\n# Which IPv4 port the server should listen to.\n# Allowed values: Integers in the range [1, 65535]\n\nserver-portv6=19133\n# Which IPv6 port the server should listen to.\n# Allowed values: Integers in the range [1, 65535]\n\nview-distance=32\n# The maximum allowed view distance in number of chunks.\n# Allowed values: Positive integer equal to 5 or greater.\n\ntick-distance=4\n# The world will be ticked this many chunks away from any player.\n# Allowed values: Integers in the range [4, 12]\n\nplayer-idle-timeout=30\n# After a player has idled for this many minutes they will be kicked. If set to 0 then players can idle indefinitely.\n# Allowed values: Any non-negative integer.\n\nmax-threads=8\n# Maximum number of threads the server will try to use. If set to 0 or removed then it will use as many as possible.\n# Allowed values: Any positive integer.\n\nlevel-name=Bedrock level\n# Allowed values: Any string without semicolon symbol or symbols illegal for file name: /\\n\\r\\t\\f`?*\\\\&lt;>|\\\":\n\nlevel-seed=\n# Use to randomize the world\n# Allowed values: Any string\n\ndefault-player-permission-level=member\n# Permission level for new players joining for the first time.\n# Allowed values: \"visitor\", \"member\", \"operator\"\n\ntexturepack-required=false\n# Force clients to use texture packs in the current world\n# Allowed values: \"true\" or \"false\"\n\ncontent-log-file-enabled=false\n# Enables logging content errors to a file\n# Allowed values: \"true\" or \"false\"\n\ncompression-threshold=1\n# Determines the smallest size of raw network payload to compress\n# Allowed values: 0-65535\n\ncompression-algorithm=zlib\n# Determines the compression algorithm to use for networking\n# Allowed values: \"zlib\", \"snappy\"\n\nserver-authoritative-movement=server-auth\n# Allowed values: \"client-auth\", \"server-auth\", \"server-auth-with-rewind\"\n# Enables server authoritative movement. If \"server-auth\", the server will replay local user input on\n# the server and send down corrections when the client's position doesn't match the server's.\n# If \"server-auth-with-rewind\" is enabled and the server sends a correction, the clients will be instructed\n# to rewind time back to the correction time, apply the correction, then replay all the player's inputs since then. This results in smoother and more frequent corrections.\n# Corrections will only happen if correct-player-movement is set to true.\n\nplayer-movement-score-threshold=20\n# The number of incongruent time intervals needed before abnormal behavior is reported.\n# Disabled by server-authoritative-movement.\n\nplayer-movement-action-direction-threshold=0.85\n# The amount that the player's attack direction and look direction can differ.\n# Allowed values: Any value in the range of [0, 1] where 1 means that the\n# direction of the players view and the direction the player is attacking\n# must match exactly and a value of 0 means that the two directions can\n# differ by up to and including 90 degrees.\n\nplayer-movement-distance-threshold=0.3\n# The difference between server and client positions that needs to be exceeded before abnormal behavior is detected.\n# Disabled by server-authoritative-movement.\n\nplayer-movement-duration-threshold-in-ms=500\n# The duration of time the server and client positions can be out of sync (as defined by player-movement-distance-threshold)\n# before the abnormal movement score is incremented. This value is defined in milliseconds.\n# Disabled by server-authoritative-movement.\n\ncorrect-player-movement=false\n# If true, the client position will get corrected to the server position if the movement score exceeds the threshold.\n\n\nserver-authoritative-block-breaking=false\n# If true, the server will compute block mining operations in sync with the client so it can verify that the client should be able to break blocks when it thinks it can.\n\nchat-restriction=None\n# Allowed values: \"None\", \"Dropped\", \"Disabled\"\n# This represents the level of restriction applied to the chat for each player that joins the server.\n# \"None\" is the default and represents regular free chat.\n# \"Dropped\" means the chat messages are dropped and never sent to any client. Players receive a message to let them know the feature is disabled.\n# \"Disabled\" means that unless the player is an operator, the chat UI does not even appear. No information is displayed to the player.\n\ndisable-player-interaction=false\n# If true, the server will inform clients that they should ignore other players when interacting with the world. This is not server authoritative.\n\n下面挑几个常用的设置项解释一下：\n\nserver-name:\n\n  server-name=Offline\n# 服务器名称，会在服务器列表那里显示n\n\ngamemode:\n\n  gamemode=survival\n# 对新玩家的默认游戏模式\n# 可以填: survival(生存), creative(创造), 或 adventure(冒险)\n\ndifficulty:\n\n  difficulty=easy\n# 设置游戏难度\n# 可以填: peaceful(和平), easy(简单), normal(普通), 或 hard(困难)\n\nallow-cheats:\n\n  allow-cheats=false\n# 是否激活作弊 (true/false)\n\nmax-players:\n\n  max-players=10\n# 服务器最大人数\n\nonline-mode:\n  online-mode=true\n# 是否开启Xbox身份验证 (true/false)\n# 就是基岩版的正版验证，只允许登录了账号的玩家加入服务器\n\nallow-list:\n  allow-list=false\n# 是否开启白名单 (true/false)\n# 开启白名单前必须开启Xbox身份验证\n\nserver-port:\n\n  server-port=19132\n# 服务器的IPV4端口\n# 数值范围: [1, 65535]\n\nserver-portv6:\n\n  server-portv6=19133\n# 服务器的IPV6端口\n# 数值范围: [1, 65535]\n\nview-distance:\n\n  view-distance=32\n# 最大可视距离\n# 数值范围: >=5\n\ntick-distance:\n\n  tick-distance=4\n# 模拟距离\n# 数值范围: [4, 12]\n\nlevel-name:\n\n  level-name=Bedrock level\n# 服务器使用的地图名称\n# 注意：是地图文件夹的名称, 如果worlds文件夹内不存在则会创建地图\n# 不能包含的字符: /\\n\\r\\t\\f`?*\\\\&lt;>|\\\":\n\nlevel-seed:\n\n  level-seed=114514\n# 服务器创建地图时使用的种子\n\ndefault-player-permission-level:\n\n  default-player-permission-level=member\n# 玩家进入的默认权限\n# 可以填: visitor(访客), member(成员), operator(管理员)\n\ntexturepack-required:\n\n  texturepack-required=false\n# 强制玩家使用和服务器相同的资源包 (true/false)\n\n","slug":"bds-tutorial-2","date":"2023-01-26T04:00:18.000Z","categories_index":"教程","tags_index":"Minecraft Bedrock Edition,我的世界基岩版,Linux,云服务器,BDS","author_index":"KangKang"},{"id":"e30a243fdea3b139e17bd92ae9b3e1de","title":"「教程」从零开始一步步搭建我的世界基岩版服务器 (Linux) 0~1","content":"[教程]从零开始一步步搭建我的世界基岩版服务器 (Linux) 0~1此教程将一步步在Linux平台上搭建我的世界基岩版服务器(BDS, 即 Bedrock Dedicated Server )，不包括LL加载器的内容，但是会尽可能提到过程中出现的种种问题以及它们的解决方案，也包括修改行为包等一系列扩展内容。本教程仅为个人经验，若有问题请以官方文档或实际情况为准。\n0.准备服务器在搭建BDS之前，我们首先需要拥有一台服务器。什么是服务器呢？一台电脑+公网就可以当作一个服务器。\n（当然这里要看需求，仅作好友联机的话也有人会选择手机+内网穿透来开服，本教程并不考虑这种情况，而是专注于一般使用Linux服务器来开服的情况）\n但是绝大多数人都没有公网，而且要做到电脑24h不间断开机也不容易。所以咱们更多会选择购买云服务器来搭建BDS。\n售卖云服务器的平台有很多，有专业的云计算服务平台，比如腾讯云、阿里云等。也有专门提供MC专用服务器的平台，这里就不举例的，去MCBBS或者MineBBS里面就能看到它们的广告。\n由于大平台会提供新用户免费试用的活动（通常都是1个月），所以我们可以先在这些平台免费领取一个服务器来试试手。\n但是这些平台的服务器CPU主频通常都是2.4 GHz，总所周知，MC十分依赖单核的性能，尤其是现在高版本的服务器，对CPU主频的要求很高。而专门提供MC专用服务器的平台会在这个方面进行考虑，就是提供了更多高主频的选择。至于到底这么选择，还是要根据实际情况来考虑。\n总结一下，准备服务器这块可以领取一个大平台免费试用的服务器来先尝试一下，其他的事情以后再考虑。\n1.配置环境和安装BDS1.1 安装系统和连接到服务器拿到领到或者买到服务器之后，对于我们这个教程来说，需要安装Ubuntu系统，如果不知道选这个版本号的话，选最大的就可以了。下文给出的命令我都是在 Ubuntu 20.04.2 LTS 上测试执行的\n系统也准备好之后，就可以使用ssh来连接到终端了。在这里连接的途径有很多，如果手头上有ssh工具那就用，如果没有的话，Windows 10 及以上的系统都自带了ssh。只需要在 Windows终端 里输入 ssh 就能看到命令的提示。比如 ssh &#x72;&#x6f;&#x6f;&#116;&#64;&#x31;&#x2e;&#50;&#46;&#x33;&#46;&#52; 就是以root用户连接到IP地址为 1.2.3.4 的服务器。\n如果不会用命令行ssh的话，可以选择一些软件，这里推荐一些我用过比较好的ssh工具:\n\nFinalShell\n\nMobaXterm:\n\nWindTerm: kingToolbox&#x2F;WindTerm: A professional cross-platform SSH&#x2F;Sftp&#x2F;Shell&#x2F;Telnet&#x2F;Serial terminal. (github.com)\n\n\n当然最推荐的还是第三个 WindTerm，前两个不开源，第二个还是付费的。而且FinalShell貌似还有安全问题…\n如果这些软件也不会用，那就装个面板吧。可以是专用于MC的面板，比如 MCSM: MCSManager (github.com)。也可以是通用的服务器面板，比如 BT 宝塔面板 - 简单好用的Linux&#x2F;Windows服务器运维管理面板 (bt.cn)\n总之，只要能通过ssh连接上服务器，那么这一小节的任务就完成啦！\n连上服务器之后可以用这条命令打印出好看的服务器信息哦\nsudo apt update &amp;&amp; sudo apt install neofetch &amp;&amp; neofetch\n\n1.2 下载并解压BDS文件我们连接到服务器之后，在安装东西之前，先更新一下软件源吧。\nsudo apt update\n\n然后创建一个目录用于存放我们的BDS文件\nmkdir bds\n\n再进入这个目录\ncd bds\n\n之后就是从网上下载BDS文件，这里可以使用wget或者curl。我倾向于wget。\n先在自己电脑上打开这个网站: 基岩版服务器下载 | Minecraft\n\n找到 适用于 UBUNTU (LINUX) 平台的 MINECRAFT 专属服务端软件。\n在下面的下载按钮上右键单击，然后选择复制链接。\n然后先在服务器终端里输入\nwget\n\n再打个空格，然后粘贴你复制的链接（注意，在Linux上面 Ctrl+C 相当于 Alt+F4，是终止程序，复制粘贴的快捷键是 Ctrl + Shift + C 和 Ctrl + Shift + V），最终的命令应该是这样的：\nwget 你复制的链接\n\n执行成功之后，可以使用ls来查看当前目录下的文件。\nls\n\n如果一切正常，那么你就能看到你下载的文件了。例如:\nbedrock-server-x.xx.xx.xx.zip\n\n现在你需要做的就是解压，我相信云服务器应该都默认安装了unzip软件包，如果你输入unzip提示没有这个命令的话，可以输入下面的命令来安装它。\nsudo apt install unzip\n\n然后再解压这个文件，先输入\nunzip\n\n再打个空格，然后输入你刚才通过ls看到的文件名，例如：\nunzip bedrock-server-x.xx.xx.xx.zip\n\n你可以先输入 bedrock , 然后按一下 Tab 就能自动补全文件名。\n如果你成功解压，再次输入ls之后多出了很多文件的话，那么恭喜你完成了这一小节。\n1.3 配置启动脚本以及安装一些需要的软件包解压完成之后，我们可以简要浏览一下目录的结构\n\nbehavior_packs 存放行为包的目录\n\nresource_packs 存放资源包的目录\n\nconfig 用于Script的配置目录，详情请见ScriptAPI\n\ndefinitions 一个目录，不清楚其作用\n\nworlds 存放世界的目录，运行一次服务器才会出现\n\nallowlist.json 白名单配置文件\n\nbedrock_server_how_to.html 官方的开服教程，是英文\n\nbedrock_server_symbols.debug 调试符号文件，这里不涉及\n\npermissions.json 玩家权限配置文件\n\nrelease-notes.txt 版本更新日志\n\nserver.properties 服务器配置文件\n\n\n记得之前下载BDS的网站吗？\n\n这里就是我们开服所需的命令了，但是每次都要输入这么长串的命令很麻烦，使用我们可以创建一个启动脚本。\n为了减少学习成本，我们可以使用nano来编辑文件。\n首先安装nano软件包\nsudo apt install nano\n\n然后创建一个名为 run.sh 的脚本文件并编辑\nnano run.sh\n\n在里面粘贴上文提到的开服命令\nLD_LIBRARY_PATH=. ./bedrock_server\n\n然后按 Ctrl+X 保存并退出\n这时候我们就一键创建好启动脚本了，但是运行的时候会出现权限错误，所以我们还需要给这个文件设置运行权限。（在Linux中输入 .&#x2F;文件名 可以运行文件）\nsudo chmod +x run.sh\n\n设置完权限，我们就可以运行服务器了。\n./run.sh\n\n如果一切正常，我们能看到类似如下的输出：\nNO LOG FILE! - setting up server logging...\n[2023-01-25 23:05:46:379 INFO] Starting Server\n[2023-01-25 23:05:46:380 INFO] Version 1.19.41.01\n[2023-01-25 23:05:46:381 INFO] Session ID 8d66dede-0992-4868-a59f-c2cfc1d9b709\n[2023-01-25 23:05:46:382 INFO] Level Name: Bedrock level\n[2023-01-25 23:05:46:419 INFO] Game mode: 0 Survival\n[2023-01-25 23:05:46:420 INFO] Difficulty: 1 EASY\n[2023-01-25 23:05:46:490 INFO] opening worlds/Bedrock level/db\n[2023-01-25 23:05:47:352 INFO] IPv4 supported, port: 19132\n[2023-01-25 23:05:47:354 INFO] IPv6 supported, port: 19133\n[2023-01-25 23:05:47:659 INFO] Server started.\n[2023-01-25 23:05:47:689 INFO] Please note that LAN discovery will not function for this server.\n[2023-01-25 23:05:47:690 INFO] Server IP must be specified in Servers tab in game. \n[2023-01-25 23:05:47:710 INFO] ================ TELEMETRY MESSAGE ===================\n[2023-01-25 23:05:47:711 INFO] Server Telemetry is currently not enabled. \n[2023-01-25 23:05:47:711 INFO] Enabling this telemetry helps us improve the game.\n[2023-01-25 23:05:47:712 INFO] \n[2023-01-25 23:05:47:712 INFO] To enable this feature, add the line 'emit-server-telemetry=true'\n[2023-01-25 23:05:47:712 INFO] to the server.properties file in the handheld/src-server directory\n[2023-01-25 23:05:47:712 INFO] ======================================================\n\n如果能看到 Server started. 并且没有出现 ERROR，那么恭喜你完成了这一小节…的前半部分。\n这时候如果我们断开服务器的ssh连接，再重新连接上之后，就会发现一切又回到了最初。这是因为断开连接相当于注销了登录，运行的程序就被终止了。要解决这个问题，我们可以安装 screen 软件包来创建会话，这样就可以让程序在里面一直运行。\nsudo apt install screen\n\n安装完之后，输入以下命令来创建一个名为bds的screen\nscreen -S bds\n\n然后在里面再运行服务器\ncd bds &amp;&amp; ./run.sh\n\n如果要离开screen会话，可以按 Ctrl+A+D , 这样不会终止里面的程序\n想再次进入的话可以输入：\nscreen -r bds\n\n输入以下命令可以列出当然创建的所有screen会话\nscreen -list\n\n如果你成功执行了上面命令，并且在重新连接ssh之后BDS仍然保持运行的话，那么恭喜你完成了这一小节。\n","slug":"bds-tutorial-0-1","date":"2023-01-25T15:20:54.000Z","categories_index":"教程","tags_index":"Minecraft Bedrock Edition,我的世界基岩版,Linux,云服务器,BDS","author_index":"KangKang"},{"id":"b93007e9fab569908e9da14bd67ddafd","title":"山上的风景#1 - 松树,松果与啤酒瓶","content":"前言不知上一次拍风景是何年何月了，今天心血来潮上山拍了几张照片，记录在这里。\n阳光下的松树林\n松树林\n被贴上编号的树墩\n地上的啤酒瓶与松果\n\n\n阳光下的一片空地\n阳光下的松树\n","slug":"山上的风景-1","date":"2023-01-25T00:16:00.000Z","categories_index":"风景","tags_index":"山,快乐,野外,瓶子","author_index":"KangKang"},{"id":"9570504a1be2b5d0d30991198cdad892","title":"「教程」如何在BDS开启实验性内容（不用下载存档）","content":"「教程」如何在BDS开启实验性内容（不用下载存档）  我们都知道Minecraft基岩版由于使用C++编写，反编译难度较高，所以几乎没有完善的第三方Mod加载器。大部分的Mod(即Addon)都是依附于官方提供的接口。而像是一些比较新的接口通常不会在正式版中默认启用，必须在世界设置里打开“实验性内容”相关选项才能使用。这就给不少开服的小白带来了困扰，由于BDS没有方便的图形化界面（它甚至没有配置文件来配置实验性功能的相关内容），所以难以直接在BDS里修改存档的实验性内容相关设置。通常的做法是把存档下载到本地，然后导入本地的Minecraft基岩版客户端，修改世界设置后再导出为.mcworld文件重新上传到服务器。这种方法行之有效，但是却比较繁琐。那么有没有一种简单的方法来修改这些设置呢？\n  在回答这个文件之前，让我们先去翻一翻 Minecraft 中文Wiki 看看我们世界的实验性设置到底存储在哪里。链接: https://minecraft.fandom.com/zh/wiki/基岩版世界格式\n\n  可以看到，我们世界的设置都存放在 level.dat 文件内，而 level.dat 为 NBT 格式文件。那么我们就有了思路: 能不能用 NBT 编辑器 直接修改 level.dat 来开启实验性内容呢？\n  鉴于不少人手上都有经典的 NBT Explorer ，所以我们先使用 NBT Explorer 试一试。 \n\n  但是很遗憾，由于 NBT Explorer 已经很久没有更新了，它似乎并不能正确读取 Minecraft基岩版 的 level.dat 文件。那么我这里我找到一个比较新的 NBT 编辑器 —— NbtStudio，在它的Github主页也明确写了支持 Minecraft基岩版 level.dat 文件的编辑。 \n\n  可以看到它是基于 NBTExpolorer 开发的，所以操作页面基本与 NBTExpolorer 一致。 \n\n  使用 NBT Studio 打开 level.dat 之后，我们看到了熟悉的NBT文件结构，也找到了心心念念的实验性内容设置项，在这里我已经把它们全部开启了（即全部的值都改为1），在退出之前别忘了保存。如果你是使用Windows来运行BDS，那么可以直接在服务器里使用 NBT Studio 进行操作，如果你是使用Linux来运行BDS或者是面板服的话，可以单独把 level.dat 文件下载下来，编辑完成之后再上传覆盖。\n  这样不需要把庞大的存档下载到本地进行一系列繁琐的操作就可以轻松实现在BDS上开启实验性内容啦。\n  :::tip  如果没有找到实验性选项，可以手动添加那几个选项，切后面的数字为一，然后再把原来的选项删除。  :::\n  附上 NBT Studio 的下载链接: https://github.com/tryashtar/nbt-studio/releases\n","slug":"minecraft-bedrock-server-enable-experiment-options","date":"2023-01-24T22:15:55.000Z","categories_index":"教程","tags_index":"Minecraft Bedrock Edition,我的世界基岩版,BDS,NBT","author_index":"KangKang"},{"id":"9eb6d12a1b989d805fd91329c904d3b0","title":"BroMaker教程 [1]","content":"本教程会教你如何使用BroMaker创建一个自己的Bro\n首先是需要的知识\n\nC# 基础知识\nUnity Mod Manager 的 Mod 的开发经验 (不是必需的)\ndnSpy 的基本操作 (不是必需的)\n\n第一部分 : 我的第一个Bro在开始之前:确保你已经下载并安装了 BroMaker \n确保你至少有一个 C# 的 IDE (例如 Visual Studio, SharpDevelop, Rider …)\n现在开始吧:首先打开你的 IDE 并新建一个类库 (我这里用 SharpDevelop 做演示)\n\n\n\n\n\n\n\n\n\n\n在这里注意！如果后续生成失败，请按照下列标黄的步骤操作\n需要选择 .NET Framework 3.5 框架，在项目属性-生成中修改目标框架\n\n然后选择 C# 3.0 和 .NET Framework 3.5\n\n再点击转换\n新建后将类名和文件名改为和命名空间相同的名字(方便管理)\n\n点击 项目-添加引用\n\n点击 .NET集合浏览器-浏览\n\n选择 BroMaker.dll (在你的 Broforce 的 Mods\\BroMaker 目录里面)\n\n点击打开后，以同样的方式添加对下列程序集的引用\n\nAssembly-CSharp.dll (位于 Broforce\\Broforce_beta_Data\\Managed 目录内）\nUnityEngine.CoreModule.dll (位于 Broforce\\Broforce_beta_Data\\Managed 目录内)\nUnityModManager.dll (位于 Broforce\\Broforce_beta_Data\\Managed\\UnityModManager 目录内)\n\n完成后你的引用列表应如图所示\n\n然后在代码中添加对 BroMakerLib 和 UnityModManagerNet 的 using 语句\nusing BroMakerLib;\nusing UnityModManagerNet;\n\n然后像一般的Mod一样创建Main类\nstatic class Main\n&#123;\n\tstatic bool Load(UnityModManager.ModEntry modEntry)\n        &#123;\n            return true;\n        &#125;\n\n&#125;\n\n再继承 BroBaseMaker 类\npublic class MyBro : BroBaseMaker\n&#123;\n\n&#125;\n\n做到这一步你的代码应该长这样:\nusing System;\nusing System.Collections.Generic;\nusing BroMakerLib;\nusing UnityModManagerNet;\n\nnamespace MyBro\n&#123;\n\tstatic class Main\n\t&#123;\n\t\tstatic bool Load(UnityModManager.ModEntry modEntry)\n\t        &#123;\n\t            return true;\n\t        &#125;\n\n\t&#125;\n\n\tpublic class MyBro : BroBaseMaker\n\t&#123;\n\n\t&#125;\n&#125;\n\n尝试生成一下项目，如果没有成功请检查上述步骤是否正确完成(特别是对程序集的引用)。\n\n将下列代码粘贴进 MyBro 类\npublic override void bm_SetupBro(Player player)\n&#123;\n\t/**\n\tthis.bm_DefaultMaterial = BroMaker.CreateMaterialFromFile();\n\tthis.bm_DefaultGunMaterial = BroMaker.CreateMaterialFromFile();\n\tthis.bm_avatarMaterial = BroMaker.CreateMaterialFromFile();\n\tthis.bm_ammoMaterial = BroMaker.CreateMaterialFromFile();\n\t**/\n\t//上述为Bro外形的自定义,下节讲解\n\tbase.bm_SetupBro(player);\n&#125;\n\nprotected override void Awake()\n&#123;\n\toriginalSpecialAmmo = 3; // 特殊弹药(技能)的最大数量. (最小为0,最大为6)\n\tfireRate = 0.10f; // 两次开火的间隔时间(毫秒)\n\tbase.Awake();\n&#125;\n\nprotected override void Start()\n&#123;\n\tbase.Start();\n\tRambro rambro = HeroController.GetHeroPrefab(HeroType.Rambro) as Rambro;\n\tBrodellWalker brodellWalker = HeroController.GetHeroPrefab(HeroType.BrodellWalker) as BrodellWalker;\n\n\tProjectile projectileRambro = Projectile.Instantiate(rambro.projectile, rambro.projectile.transform);\n\t//上述为获取 Rambro 的 实例 和 BrodellWalker 的 实例 ，同时注意上一行在获取子弹时必须要写（会在下一节讲解）\n\t\t\t  \n\tprojectile = projectileRambro; \n\tspecialGrenade = brodellWalker.specialGrenade;\t\t  \n\t//定义你的Bro的子弹和特殊弹药，在这里是Rambro的子弹和BrodellWalker的手榴弹\n&#125;\n\n现在我们已经定义了一些Bro的属性，接下来应该向BroMaker注册我们的新Bro\n将下列代码粘贴进 Main 类 中的 Load 方法内\nnew NewBroInfo(typeof(MyBro), \"MyBro\");\n\n好了，接下来生成你的项目\n在生成的目录下新建 Info.json 输入以下内容\n&#123;\n    \"Id\": \"MyBro\",\n    \"DisplayName\": \"Mybro\",\n    \"Author\": \"Author\",\n    \"Version\": \"0.0.1\",\n    \"Requirements\": [\"BroMaker\"],\n    \"LoadAfter\": [\"BroMaker\"],\n    \"AssemblyName\": \"MyBro.dll\",\n    \"EntryMethod\": \"MyBro.Main.Load\"\n&#125;\n\n然后将生成的 MyBro.dll 和 Info.json 一起打包为 MyBro.zip\n再通过UnityModManager安装，然后进游戏查看效果吧\n未完待续…\nby:KangKang QQ:2646381627\n","slug":"bromaker-1","date":"2023-01-24T20:26:58.000Z","categories_index":"教程","tags_index":"Broforce,CSharp,Mod","author_index":"KangKang"},{"id":"b3f5d84087fe8d221c1bfa963b46c529","title":"「软件」POBCRPGConfigEditor - POBCRPG配置文件可视化编辑器","content":"POBCRPGConfigEditor - POBCRPG配置文件可视化编辑器可以轻松地编辑职业啦\n特色: 1.模仿Terraria的UI界面\n\n2.便捷地选择物品和Buff\n\n3.开源！但是代码很乱且没有注释 :(\n下载地址&amp;开源地址 \n","slug":"「软件」POBCRPGConfigEditor-POBCRPG配置文件可视化编辑器","date":"2022-09-02T23:02:00.000Z","categories_index":"软件","tags_index":"CSharp,Terraria,软件,自制","author_index":"KangKang"},{"id":"a7b409d6e0186f2604199f2ce0877e8a","title":"记录使用 Lib.Harmony 时注入过程中遇到的一个坑","content":"1. 从这里开始  在一个无聊的下午，我偶然看到某个 Terraria 群里在谈论着一个叫 TerrariaHelper(自动钓鱼) 的软件，顿时有了兴致。我之前粗略研究过 FruitY(某个直接修改 Terraria 程序集代码而做出来的魔改端(作弊端)，功能丰富) 的实现代码，但是今天看到的是一个独立的 Helper 程序，没有修改 Terraria 的源文件，也包含了自瞄，自动回血等等功能，不禁让人好奇这些功能是如何实现的。\n  我一开始猜想这可能类似于 CE(Cheat Engine) 那样，从内存的层面上去修改一些东西(感觉很复杂，没有研究过)。直到我偷偷地把它拖进了 dnSpy(一个反编译软件)，短暂地分析代码后，得出的结果让我大吃一惊——居然使用了 Lib.Harmony(我接触过 Lib.Harmony 但是我只知道它是用来制作 Unity 游戏的 Mod 的)，然后我才意识到 Lib.Harmony 功能强大，不仅仅是做 Unity 游戏 Mod 的工具。\n2. 阅读 Lib.Harmony 的文档  因为 Lib.Harmony 没有多少中文资料(宵夜97制作过一系列教程)，我们还是从看它的官网文档开始！\n\n\n\n\n\n\n\n\n\nHarmony 2IntroductionHarmony gives you an elegant(优雅的) and high level way to alter functionality(实用地更改) in applications written in C#. It does this at runtime by monkey patching methods unlike other solutions that change the content of dll files.\nIt supports Mono and .NET environments on Windows, Unix and macOS except when Unity uses the stripped down NetStandard profile (.NET 4.x profile works fine). Harmony is used in mainstream Unity games and many other applications.(不仅仅用于 Unity 游戏，还有其他的应用程序)\nDesigned to be used by multiple users (usually called Mods) that would otherwise override each others hooks, it was originally created for the game RimWorld and its large modding community by Andreas Pardeike.\nEnjoy!&#x2F;Andreas Pardeike\n……\nIntroductionHarmony - a library for patching, replacing and decorating .NET methods during runtime.\n  上面的介绍提到了 Lib.Harmony 是一个跨平台的适用于 Mono 和 .NET 运行时环境的在程序运行时对方法进行 修补(patch)，替换(replace) 和 装饰(decorate) 的类库。同时，尽管 Lib.Harmony 最初是为 RimWorld 而创造 且现在大多用于 Unity 游戏的 Mod 创作，但是它仍然适用于其他的符合要求的 .NET 应用程序。\n\n\n\n\n\n\n\n\n\nBootstrapping and InjectionHarmony does not provide you with a way to run your own code within an application that is not designed to execute foreign code. You need a way to inject at least the few lines that start the Harmony patching and this is usually done with a loader. Here are some common examples of loaders (incomplete):\n\nUnity Doorstop\nBepInEx\nUnityAssemblyInjector\nMonoJunkie\nMInjector\nand more…\n\nYou need to find your own injection method or choose a game that supports user dll loading (usually called Mods) like for example RimWorld (Wiki).\n  上面提到，Lib.Harmony 不是用被设计来在应用程序里面执行外来的代码，所以它没有给你在别的程序里面运行你的代码的方法。而且你需要把代码通过加载器(注入器)注入目标程序才能让它们开始工作。\n  上面列举了几个加载器，但是很遗憾，他们都是针对 Mono 运行时的(就是 Unity 程序使用的运行时环境)。所以如果要在其他的应用程序里面使用 Lib.Harmony，需要寻找或者自己做一个注入器。( 注入这个步骤我遇到了第一个坑 )\n\n\n\n\n\n\n\n\n\nAdding using nugetTo add Harmony manually to your Visual Studio project, you right-click on References in your solution explorer and choose Manage NuGet Packages, then search for “Harmony Library” and install it.\nImportOnce you reference Harmony correctly, you should be able to import it by adding Harmony to your imports. That gives you code completion so you can discover the API:\nusing HarmonyLib;\n\nCreating a Harmony instanceMost patch operations require a Harmony instance. To instantiate Harmony, you simply call\nvar harmony = new Harmony(\"com.company.project.product\");\n\nThe id should be in reverse domain notation and must be unique. In order to understand and react on existing patches of others, all patches in Harmony are bound to that id. This allows other authors to execute their patches before or after a specific patch by referring to this id.\nPatching using annotationsIf you prefer annotations to organize your patches, you instruct Harmony to search for them by using PatchAll():\nvar assembly = Assembly.GetExecutingAssembly();\nharmony.PatchAll(assembly);\n\n// or implying current assembly:\nharmony.PatchAll();\n\nwhich will search the given assembly for all classes that are decorated with Harmony annotations. All patches are registered automatically and Harmony will do the rest.\n  通过上面的教程(或者宵夜97的教程)可以写出 Lib.Harmony 的”初始化”代码\nusing System;\nusing System.Windows.Froms; // 我们可以用 MessageBox 来看看有没有成功载入\nusing HarmonyLib;\n\nnamespace MyPatch &#123;\n    public static class EndPoint &#123;\n        public static void Start() &#123;\n            var harmony = new Harmony(\"my.patch\");\n            harmony.PatchAll();\n            MessageBox.Show(\"成功注入!\");\n        &#125;\n    &#125;\n&#125;\n\n  似乎一切都没问题，现在寻找注入的方法。我还是参照了 TerrariaHelper 的方式，引用 FastWin32 包，调用里面的 InjectManaged 方法来进行注入。\nbool Injector.InjectManaged(uint processId, string assemblyPath, string typeName, string methodName, string argument)\n\n\n\n\n\n\n\n\n\n\n参数说明：\nprocessId：目标进程的进程id -&gt;pid\nassemblyPath：核心Hook 注入的dll 绝对路径\ntypeName：Hook 初始化方法的命名空间，一般注入一个模块dll后需要执行的入口初始化方法，这里是Hook 核心dll 中的HookService.Start 方法的命名空间（Jlion.Process.HookCore.HookService）\nmethodName : 注入后执行的方法名称\nargument : 方法所需要的参数\n\n  当我生成好要注入的 dll 和简易的注入器后，打开了一个测试的程序进行注入，Injector.InjectManaged 方法返回了 true。意思是注入成功了，但是却没有弹出“成功注入”的消息框。我起初以为是注入器的问题(因为 FastWin32 这个库比较久远，是在 .NET Framework 上面开发的，甚至显示不兼容 .NET Framework 4.8，而我的简易注入器是创建的 .NET 6 的项目)，于是我又新建了一个 .NET Framework 的项目，但是问题没有解决。\n  我又感觉可能是 FastWin32 太久远了，或许 Windows11 平台上面不兼容它。所以我在 GitHub 上面找了的一款现成的注入器 \nManagedInjector (正是这个注入器帮我解决了问题)。\n  当我用这个注入器选择我生成的 dll 时，列表里竟空无一物，无法选择我的 Start 方法进行注入。\n  我这才意识到可能是我的 dll 出了问题。\n  [经过了漫长的尝试]\n  我发现了一个规律，只有当方法的返回值为 int 类型，且参数有且只有一个 string 类型变量时，才能成功被注入。\nusing System;\nusing System.Windows.Froms; // 我们可以用 MessageBox 来看看有没有成功载入\nusing HarmonyLib;\n\nnamespace MyPatch &#123;\n    public static class EndPoint &#123;\n        public static int Start(string str) &#123; // void -> int, () -> (string str)\n            var harmony = new Harmony(\"my.patch\");\n            harmony.PatchAll();\n            MessageBox.Show(\"成功注入!\");\n            return 0;\n        &#125;\n    &#125;\n&#125;\n\n将代码改成上面这样后，终于注入成功，弹出了”成功注入”的消息框！\n","slug":"lib-harmony-1","date":"2022-07-24T19:23:33.000Z","categories_index":"踩坑","tags_index":"CSharp,Lib.Harmony","author_index":"KangKang"}]